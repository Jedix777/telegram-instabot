import os
import logging
import yt_dlp
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
from datetime import datetime

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://mybot.onrender.com
ADMIN_ID = int(os.environ.get("ADMIN_ID", "123456789"))  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π Telegram user ID

COOKIES_FILE = "cookies.txt"

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /status
stats = {
    "started_at": datetime.utcnow(),
    "total_downloads": 0,
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ Instagram –∏–ª–∏ YouTube –≤–∏–¥–µ–æ, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –µ–≥–æ —Å–∫–∞—á–∞—Ç—å.\n"
        "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Ñ–∞–π–ª cookies –≤ —Ñ–æ—Ä–º–∞—Ç–µ txt —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /setcookies."
    )

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    uptime = datetime.utcnow() - stats["started_at"]
    msg = (
        f"‚è≥ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {str(uptime).split('.')[0]}\n"
        f"üé• –í—Å–µ–≥–æ —Å–∫–∞—á–∞–Ω–æ –≤–∏–¥–µ–æ: {stats['total_downloads']}"
    )
    await update.message.reply_text(msg)

async def set_cookies(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    if not update.message.document:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª cookies.txt –≤ —Ñ–æ—Ä–º–∞—Ç–µ txt.")
        return

    document = update.message.document
    if not document.file_name.endswith(".txt"):
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .txt.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª cookies
    file = await document.get_file()
    await file.download_to_drive(COOKIES_FILE)

    await update.message.reply_text("–§–∞–π–ª cookies —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")

async def handle_instagram_or_youtube_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()

    if not ("instagram.com" in url or "youtu" in url):
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å Instagram –∏–ª–∏ YouTube.")
        return

    await update.message.reply_text("–°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")

    ydl_opts = {
        "format": "best",
        "outtmpl": "video.%(ext)s",
        "quiet": True,
    }

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª cookies - –ø–µ—Ä–µ–¥–∞–µ–º –≤ yt-dlp (–¥–ª—è Instagram)
    if os.path.exists(COOKIES_FILE):
        ydl_opts["cookiefile"] = COOKIES_FILE

    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)

        with open(filename, "rb") as video_file:
            await update.message.reply_video(video=video_file)

        os.remove(filename)
        stats["total_downloads"] += 1

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        await update.message.reply_text(
            "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ üò¢ –í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –Ω—É–∂–Ω—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies."
        )

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("status", status))
    app.add_handler(CommandHandler("setcookies", set_cookies))

    # –§–∏–ª—å—Ç—Ä: —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Å—Å—ã–ª–∫–∏ Instagram –∏–ª–∏ YouTube, –Ω–µ –∫–æ–º–∞–Ω–¥—ã
    link_filter = (
        filters.TEXT
        & ~filters.COMMAND
        & filters.Regex(r"https?://")
        & filters.Regex(r"(instagram\.com|youtu)")
    )
    app.add_handler(MessageHandler(link_filter, handle_instagram_or_youtube_link))

    # –ó–∞–ø—É—Å–∫ Webhook
    app.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 8443)),
        url_path=BOT_TOKEN,
        webhook_url=f"{WEBHOOK_URL}/{BOT_TOKEN}",
    )

if __name__ == "__main__":
    main()

